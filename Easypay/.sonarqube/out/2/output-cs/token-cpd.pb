¯	
YE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Program.cs
	namespace

 	
DAL


 
{ 
class 	
Program
 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
UserRepo 
repo 
= 
new 
UserRepo  (
(( )
)) *
;* +
var 
newUser 
= 
repo 
. 
AddUser &
(& '
new' *
User+ /
{0 1
UserId2 8
=9 :
$num; <
,< =
Email> C
=D E
$strF W
,W X
PasswordY a
=b c
$strd o
,o p
Roleq u
=v w
$strx 
}
Ä Å
)
Å Ç
;
Ç É
Console 
. 
	WriteLine 
( 
newUser %
!=& (
null) -
?. /
$str0 ?
:@ A
$strB I
)I J
;J K
} 	
} 
} ë
]E:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\User.cs
	namespace 	
DAL
 
. 
Models 
{		 
[

 
Table

 

(


 
$str

 
)

 
]

 
public 

class 
User 
{ 
[ 	
Key	 
] 
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
Required	 
, 
EmailAddress 
,  
StringLength! -
(- .
$num. 1
)1 2
]2 3
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
, 
StringLength 
(  
$num  #
)# $
]$ %
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
DefaultValue	 
( 
$str  
)  !
,! "
StringLength# /
(/ 0
$num0 2
)2 3
]3 4
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ◊
bE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\Timesheet.cs
	namespace 	
DAL
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public		 

class		 
	Timesheet		 
{

 
[ 	
Key	 
] 
public 
int 
TimesheetId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 

EmployeeId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
] 
public 
double 
HoursWorked !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} Â

fE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\PayrollConfig.cs
	namespace 	
DAL
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public		 

class		 
PayrollConfig		 
{

 
[ 	
Key	 
] 
public 
int 
ConfigId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

EmployeeId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
public 
decimal 

Allowances !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
public 
decimal 

Deductions !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
public 
decimal 
TaxRate 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} «
`E:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\Payroll.cs
	namespace 	
DAL
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public		 

class		 
Payroll		 
{

 
[ 	
Key	 
] 
public 
int 
	PayrollId 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
] 
public 
int 

EmployeeId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Column	 
( 
TypeName 
= 
$str *
)* +
]+ ,
public 
decimal 
Salary 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Column	 
( 
TypeName 
= 
$str *
)* +
]+ ,
public 
decimal 
Bonus 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Column	 
( 
TypeName 
= 
$str *
)* +
]+ ,
public 
decimal 

Deductions !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Column	 
( 
TypeName 
= 
$str *
)* +
]+ ,
public 
decimal 
	NetSalary  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
PayrollDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
}   —

eE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\Notification.cs
	namespace 	
DAL
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public		 

class		 
Notification		 
{

 
[ 	
Key	 
] 
public 
int 
NotificationId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 

EmployeeId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
, 
StringLength 
(  
$num  #
)# $
]$ %
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
SentDate  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
IsRead 
{ 
get  
;  !
set" %
;% &
}' (
} 
} Â

eE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\LeaveRequest.cs
	namespace 	
DAL
 
. 
Models 
{ 
[		 
Table		 

(		
 
$str		 
)		 
]		 
public

 

class

 
LeaveRequest

 
{ 
[ 	
Key	 
] 
public 
int 
LeaveRequestId !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
public 
int 

EmployeeId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
	StartDate !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
EndDate 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Status 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} Ì
aE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\Employee.cs
	namespace 	
DAL
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public 

class 
Employee 
{		 
[

 	
Key

	 
]

 
public 
int 

EmployeeId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
, 
StringLength 
(  
$num  #
)# $
]$ %
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
, 
EmailAddress 
]  
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 

Department  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ⁄)
gE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\EasypayContext.cs
public 
class 
EasypayContext 
: 
	DbContext '
{ 
public 

DbSet 
< 
Employee 
> 
	Employees $
=>% '
Set( +
<+ ,
Employee, 4
>4 5
(5 6
)6 7
;7 8
public 

DbSet 
< 
Payroll 
> 
Payrolls "
=># %
Set& )
<) *
Payroll* 1
>1 2
(2 3
)3 4
;4 5
public 

DbSet 
< 
LeaveRequest 
> 
LeaveRequests ,
=>- /
Set0 3
<3 4
LeaveRequest4 @
>@ A
(A B
)B C
;C D
public		 

DbSet		 
<		 
User		 
>		 
Users		 
=>		 
Set		  #
<		# $
User		$ (
>		( )
(		) *
)		* +
;		+ ,
public

 

DbSet

 
<

 
Benefit

 
>

 
Benefits

 "
=>

# %
Set

& )
<

) *
Benefit

* 1
>

1 2
(

2 3
)

3 4
;

4 5
public 

DbSet 
< 
AuditLog 
> 
	AuditLogs $
=>% '
Set( +
<+ ,
AuditLog, 4
>4 5
(5 6
)6 7
;7 8
public 

DbSet 
< 
PayrollConfig 
> 
PayrollConfigs  .
=>/ 1
Set2 5
<5 6
PayrollConfig6 C
>C D
(D E
)E F
;F G
public 

DbSet 
< 
Notification 
> 
Notifications ,
=>- /
Set0 3
<3 4
Notification4 @
>@ A
(A B
)B C
;C D
public 

DbSet 
< 
	Timesheet 
> 

Timesheets &
=>' )
Set* -
<- .
	Timesheet. 7
>7 8
(8 9
)9 :
;: ;
	protected 
override 
void 
OnConfiguring )
() *#
DbContextOptionsBuilder* A
optionsBuilderB P
)P Q
{ 
if 

( 
! 
optionsBuilder 
. 
IsConfigured (
)( )
{ 	
optionsBuilder 
. 
UseSqlServer '
(' (
DatabaseHelper( 6
.6 7
GetConnectionString7 J
(J K
)K L
)L M
;M N
} 	
base 
. 
OnConfiguring 
( 
optionsBuilder )
)) *
;* +
} 
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
modelBuilder 
. 
Entity 
< 
Employee $
>$ %
(% &
)& '
. 
HasIndex 
( 
e 
=> 
e 
. 
Email "
)" #
.   
IsUnique   
(   
)   
;   
modelBuilder"" 
."" 
Entity"" 
<"" 
Payroll"" #
>""# $
(""$ %
)""% &
.## 	
Property##	 
(## 
p## 
=>## 
p## 
.## 
Salary## 
)##  
.$$ 	
HasPrecision$$	 
($$ 
$num$$ 
,$$ 
$num$$ 
)$$ 
;$$ 
modelBuilder&& 
.&& 
Entity&& 
<&& 
PayrollConfig&& )
>&&) *
(&&* +
entity&&+ 1
=>&&2 4
{'' 	
entity(( 
.(( 
Property(( 
((( 
p(( 
=>((  
p((! "
.((" #

Allowances((# -
)((- .
.((. /
HasPrecision((/ ;
(((; <
$num((< >
,((> ?
$num((@ A
)((A B
;((B C
entity)) 
.)) 
Property)) 
()) 
p)) 
=>))  
p))! "
.))" #

Deductions))# -
)))- .
.)). /
HasPrecision))/ ;
()); <
$num))< >
,))> ?
$num))@ A
)))A B
;))B C
entity** 
.** 
Property** 
(** 
p** 
=>**  
p**! "
.**" #
TaxRate**# *
)*** +
.**+ ,
HasPrecision**, 8
(**8 9
$num**9 :
,**: ;
$num**< =
)**= >
;**> ?
}++ 	
)++	 

;++
 
},, 
}-- ∫

`E:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\Benefit.cs
	namespace 	
DAL
 
. 
Models 
{ 
[		 
Table		 

(		
 
$str		 
)		 
]		 
public

 

class

 
Benefit

 
{ 
[ 	
Key	 
] 
public 
int 
	BenefitId 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
] 
public 
int 

EmployeeId 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Type 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Column	 
( 
TypeName 
= 
$str *
)* +
]+ ,
public 
decimal 
Amount 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} Ñ	
aE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\AuditLog.cs
	namespace 	
DAL
 
. 
Models 
{ 
[		 
Table		 

(		
 
$str		 
)		 
]		 
public

 

class

 
AuditLog

 
{ 
[ 	
Key	 
] 
public 
int 

AuditLogId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Action 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	Timestamp !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ﬂ

gE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Models\DatabaseHelper.cs
	namespace 	
DAL
 
. 
Models 
{		 
public

 

static

 
class

 
DatabaseHelper

 &
{ 
public 
static 
string 
GetConnectionString 0
(0 1
)1 2
{ 	
var 
builder 
= 
new  
ConfigurationBuilder 2
(2 3
)3 4
.4 5
SetBasePath5 @
(@ A
	DirectoryA J
.J K
GetCurrentDirectoryK ^
(^ _
)_ `
)` a
.a b
AddJsonFileb m
(m n
$str	n Ä
,
Ä Å
optional
Ç ä
:
ä ã
true
å ê
,
ê ë
reloadOnChange
í †
:
† °
true
¢ ¶
)
¶ ß
;
ß ®
string 
connectionString #
=$ %
builder& -
.- .
Build. 3
(3 4
)4 5
.5 6
GetConnectionString6 I
(I J
$strJ V
)V W
;W X
return 
connectionString #
;# $
} 	
} 
} ‡Â
{E:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\Migrations\20250618160850_InitialDatabase.cs
	namespace 	
DAL
 
. 

Migrations 
{ 
public		 

partial		 
class		 
InitialDatabase		 (
:		) *
	Migration		+ 4
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 

AuditLogId 
=  
table! &
.& '
Column' -
<- .
int. 1
>1 2
(2 3
type3 7
:7 8
$str9 >
,> ?
nullable@ H
:H I
falseJ O
)O P
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
UserId 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
,L M
Action 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
	maxLengthI R
:R S
$numT W
,W X
nullableY a
:a b
falsec h
)h i
,i j
	Timestamp 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= H
,H I
nullableJ R
:R S
falseT Y
)Y Z
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 2
,2 3
x4 5
=>6 8
x9 :
.: ;

AuditLogId; E
)E F
;F G
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
,  
columns 
: 
table 
=> !
new" %
{   
	BenefitId!! 
=!! 
table!!  %
.!!% &
Column!!& ,
<!!, -
int!!- 0
>!!0 1
(!!1 2
type!!2 6
:!!6 7
$str!!8 =
,!!= >
nullable!!? G
:!!G H
false!!I N
)!!N O
."" 

Annotation"" #
(""# $
$str""$ 8
,""8 9
$str"": @
)""@ A
,""A B

EmployeeId## 
=##  
table##! &
.##& '
Column##' -
<##- .
int##. 1
>##1 2
(##2 3
type##3 7
:##7 8
$str##9 >
,##> ?
nullable##@ H
:##H I
false##J O
)##O P
,##P Q
Type$$ 
=$$ 
table$$  
.$$  !
Column$$! '
<$$' (
string$$( .
>$$. /
($$/ 0
type$$0 4
:$$4 5
$str$$6 E
,$$E F
	maxLength$$G P
:$$P Q
$num$$R U
,$$U V
nullable$$W _
:$$_ `
false$$a f
)$$f g
,$$g h
Amount%% 
=%% 
table%% "
.%%" #
Column%%# )
<%%) *
decimal%%* 1
>%%1 2
(%%2 3
type%%3 7
:%%7 8
$str%%9 H
,%%H I
nullable%%J R
:%%R S
false%%T Y
)%%Y Z
}&& 
,&& 
constraints'' 
:'' 
table'' "
=>''# %
{(( 
table)) 
.)) 

PrimaryKey)) $
())$ %
$str))% 1
,))1 2
x))3 4
=>))5 7
x))8 9
.))9 :
	BenefitId)): C
)))C D
;))D E
}** 
)** 
;** 
migrationBuilder,, 
.,, 
CreateTable,, (
(,,( )
name-- 
:-- 
$str--  
,--  !
columns.. 
:.. 
table.. 
=>.. !
new.." %
{// 

EmployeeId00 
=00  
table00! &
.00& '
Column00' -
<00- .
int00. 1
>001 2
(002 3
type003 7
:007 8
$str009 >
,00> ?
nullable00@ H
:00H I
false00J O
)00O P
.11 

Annotation11 #
(11# $
$str11$ 8
,118 9
$str11: @
)11@ A
,11A B
Name22 
=22 
table22  
.22  !
Column22! '
<22' (
string22( .
>22. /
(22/ 0
type220 4
:224 5
$str226 E
,22E F
	maxLength22G P
:22P Q
$num22R U
,22U V
nullable22W _
:22_ `
false22a f
)22f g
,22g h
Email33 
=33 
table33 !
.33! "
Column33" (
<33( )
string33) /
>33/ 0
(330 1
type331 5
:335 6
$str337 F
,33F G
nullable33H P
:33P Q
false33R W
)33W X
,33X Y

Department44 
=44  
table44! &
.44& '
Column44' -
<44- .
string44. 4
>444 5
(445 6
type446 :
:44: ;
$str44< J
,44J K
	maxLength44L U
:44U V
$num44W Y
,44Y Z
nullable44[ c
:44c d
false44e j
)44j k
,44k l
Role55 
=55 
table55  
.55  !
Column55! '
<55' (
string55( .
>55. /
(55/ 0
type550 4
:554 5
$str556 D
,55D E
	maxLength55F O
:55O P
$num55Q S
,55S T
nullable55U ]
:55] ^
false55_ d
)55d e
}66 
,66 
constraints77 
:77 
table77 "
=>77# %
{88 
table99 
.99 

PrimaryKey99 $
(99$ %
$str99% 2
,992 3
x994 5
=>996 8
x999 :
.99: ;

EmployeeId99; E
)99E F
;99F G
}:: 
):: 
;:: 
migrationBuilder<< 
.<< 
CreateTable<< (
(<<( )
name== 
:== 
$str== 
,== 
columns>> 
:>> 
table>> 
=>>> !
new>>" %
{?? 
UserId@@ 
=@@ 
table@@ "
.@@" #
Column@@# )
<@@) *
int@@* -
>@@- .
(@@. /
type@@/ 3
:@@3 4
$str@@5 :
,@@: ;
nullable@@< D
:@@D E
false@@F K
)@@K L
.AA 

AnnotationAA #
(AA# $
$strAA$ 8
,AA8 9
$strAA: @
)AA@ A
,AAA B
EmailBB 
=BB 
tableBB !
.BB! "
ColumnBB" (
<BB( )
stringBB) /
>BB/ 0
(BB0 1
typeBB1 5
:BB5 6
$strBB7 F
,BBF G
	maxLengthBBH Q
:BBQ R
$numBBS V
,BBV W
nullableBBX `
:BB` a
falseBBb g
)BBg h
,BBh i
PasswordCC 
=CC 
tableCC $
.CC$ %
ColumnCC% +
<CC+ ,
stringCC, 2
>CC2 3
(CC3 4
typeCC4 8
:CC8 9
$strCC: I
,CCI J
	maxLengthCCK T
:CCT U
$numCCV Y
,CCY Z
nullableCC[ c
:CCc d
falseCCe j
)CCj k
,CCk l
RoleDD 
=DD 
tableDD  
.DD  !
ColumnDD! '
<DD' (
stringDD( .
>DD. /
(DD/ 0
typeDD0 4
:DD4 5
$strDD6 D
,DDD E
	maxLengthDDF O
:DDO P
$numDDQ S
,DDS T
nullableDDU ]
:DD] ^
falseDD_ d
)DDd e
}EE 
,EE 
constraintsFF 
:FF 
tableFF "
=>FF# %
{GG 
tableHH 
.HH 

PrimaryKeyHH $
(HH$ %
$strHH% .
,HH. /
xHH0 1
=>HH2 4
xHH5 6
.HH6 7
UserIdHH7 =
)HH= >
;HH> ?
}II 
)II 
;II 
migrationBuilderKK 
.KK 
CreateTableKK (
(KK( )
nameLL 
:LL 
$strLL $
,LL$ %
columnsMM 
:MM 
tableMM 
=>MM !
newMM" %
{NN 
LeaveRequestIdOO "
=OO# $
tableOO% *
.OO* +
ColumnOO+ 1
<OO1 2
intOO2 5
>OO5 6
(OO6 7
typeOO7 ;
:OO; <
$strOO= B
,OOB C
nullableOOD L
:OOL M
falseOON S
)OOS T
.PP 

AnnotationPP #
(PP# $
$strPP$ 8
,PP8 9
$strPP: @
)PP@ A
,PPA B

EmployeeIdQQ 
=QQ  
tableQQ! &
.QQ& '
ColumnQQ' -
<QQ- .
intQQ. 1
>QQ1 2
(QQ2 3
typeQQ3 7
:QQ7 8
$strQQ9 >
,QQ> ?
nullableQQ@ H
:QQH I
falseQQJ O
)QQO P
,QQP Q
	StartDateRR 
=RR 
tableRR  %
.RR% &
ColumnRR& ,
<RR, -
DateTimeRR- 5
>RR5 6
(RR6 7
typeRR7 ;
:RR; <
$strRR= H
,RRH I
nullableRRJ R
:RRR S
falseRRT Y
)RRY Z
,RRZ [
EndDateSS 
=SS 
tableSS #
.SS# $
ColumnSS$ *
<SS* +
DateTimeSS+ 3
>SS3 4
(SS4 5
typeSS5 9
:SS9 :
$strSS; F
,SSF G
nullableSSH P
:SSP Q
falseSSR W
)SSW X
,SSX Y
StatusTT 
=TT 
tableTT "
.TT" #
ColumnTT# )
<TT) *
stringTT* 0
>TT0 1
(TT1 2
typeTT2 6
:TT6 7
$strTT8 F
,TTF G
	maxLengthTTH Q
:TTQ R
$numTTS U
,TTU V
nullableTTW _
:TT_ `
falseTTa f
)TTf g
}UU 
,UU 
constraintsVV 
:VV 
tableVV "
=>VV# %
{WW 
tableXX 
.XX 

PrimaryKeyXX $
(XX$ %
$strXX% 6
,XX6 7
xXX8 9
=>XX: <
xXX= >
.XX> ?
LeaveRequestIdXX? M
)XXM N
;XXN O
tableYY 
.YY 

ForeignKeyYY $
(YY$ %
nameZZ 
:ZZ 
$strZZ C
,ZZC D
column[[ 
:[[ 
x[[  !
=>[[" $
x[[% &
.[[& '

EmployeeId[[' 1
,[[1 2
principalTable\\ &
:\\& '
$str\\( 2
,\\2 3
principalColumn]] '
:]]' (
$str]]) 5
,]]5 6
onDelete^^  
:^^  !
ReferentialAction^^" 3
.^^3 4
Cascade^^4 ;
)^^; <
;^^< =
}__ 
)__ 
;__ 
migrationBuilderaa 
.aa 
CreateTableaa (
(aa( )
namebb 
:bb 
$strbb $
,bb$ %
columnscc 
:cc 
tablecc 
=>cc !
newcc" %
{dd 
NotificationIdee "
=ee# $
tableee% *
.ee* +
Columnee+ 1
<ee1 2
intee2 5
>ee5 6
(ee6 7
typeee7 ;
:ee; <
$stree= B
,eeB C
nullableeeD L
:eeL M
falseeeN S
)eeS T
.ff 

Annotationff #
(ff# $
$strff$ 8
,ff8 9
$strff: @
)ff@ A
,ffA B

EmployeeIdgg 
=gg  
tablegg! &
.gg& '
Columngg' -
<gg- .
intgg. 1
>gg1 2
(gg2 3
typegg3 7
:gg7 8
$strgg9 >
,gg> ?
nullablegg@ H
:ggH I
falseggJ O
)ggO P
,ggP Q
Messagehh 
=hh 
tablehh #
.hh# $
Columnhh$ *
<hh* +
stringhh+ 1
>hh1 2
(hh2 3
typehh3 7
:hh7 8
$strhh9 H
,hhH I
	maxLengthhhJ S
:hhS T
$numhhU X
,hhX Y
nullablehhZ b
:hhb c
falsehhd i
)hhi j
,hhj k
SentDateii 
=ii 
tableii $
.ii$ %
Columnii% +
<ii+ ,
DateTimeii, 4
>ii4 5
(ii5 6
typeii6 :
:ii: ;
$strii< G
,iiG H
nullableiiI Q
:iiQ R
falseiiS X
)iiX Y
,iiY Z
IsReadjj 
=jj 
tablejj "
.jj" #
Columnjj# )
<jj) *
booljj* .
>jj. /
(jj/ 0
typejj0 4
:jj4 5
$strjj6 ;
,jj; <
nullablejj= E
:jjE F
falsejjG L
)jjL M
}kk 
,kk 
constraintsll 
:ll 
tablell "
=>ll# %
{mm 
tablenn 
.nn 

PrimaryKeynn $
(nn$ %
$strnn% 6
,nn6 7
xnn8 9
=>nn: <
xnn= >
.nn> ?
NotificationIdnn? M
)nnM N
;nnN O
tableoo 
.oo 

ForeignKeyoo $
(oo$ %
namepp 
:pp 
$strpp C
,ppC D
columnqq 
:qq 
xqq  !
=>qq" $
xqq% &
.qq& '

EmployeeIdqq' 1
,qq1 2
principalTablerr &
:rr& '
$strrr( 2
,rr2 3
principalColumnss '
:ss' (
$strss) 5
,ss5 6
onDeletett  
:tt  !
ReferentialActiontt" 3
.tt3 4
Cascadett4 ;
)tt; <
;tt< =
}uu 
)uu 
;uu 
migrationBuilderww 
.ww 
CreateTableww (
(ww( )
namexx 
:xx 
$strxx 
,xx  
columnsyy 
:yy 
tableyy 
=>yy !
newyy" %
{zz 
	PayrollId{{ 
={{ 
table{{  %
.{{% &
Column{{& ,
<{{, -
int{{- 0
>{{0 1
({{1 2
type{{2 6
:{{6 7
$str{{8 =
,{{= >
nullable{{? G
:{{G H
false{{I N
){{N O
.|| 

Annotation|| #
(||# $
$str||$ 8
,||8 9
$str||: @
)||@ A
,||A B

EmployeeId}} 
=}}  
table}}! &
.}}& '
Column}}' -
<}}- .
int}}. 1
>}}1 2
(}}2 3
type}}3 7
:}}7 8
$str}}9 >
,}}> ?
nullable}}@ H
:}}H I
false}}J O
)}}O P
,}}P Q
Salary~~ 
=~~ 
table~~ "
.~~" #
Column~~# )
<~~) *
decimal~~* 1
>~~1 2
(~~2 3
type~~3 7
:~~7 8
$str~~9 H
,~~H I
	precision~~J S
:~~S T
$num~~U W
,~~W X
scale~~Y ^
:~~^ _
$num~~` a
,~~a b
nullable~~c k
:~~k l
false~~m r
)~~r s
,~~s t
Bonus 
= 
table !
.! "
Column" (
<( )
decimal) 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
falseS X
)X Y
,Y Z

Deductions
ÄÄ 
=
ÄÄ  
table
ÄÄ! &
.
ÄÄ& '
Column
ÄÄ' -
<
ÄÄ- .
decimal
ÄÄ. 5
>
ÄÄ5 6
(
ÄÄ6 7
type
ÄÄ7 ;
:
ÄÄ; <
$str
ÄÄ= L
,
ÄÄL M
nullable
ÄÄN V
:
ÄÄV W
false
ÄÄX ]
)
ÄÄ] ^
,
ÄÄ^ _
	NetSalary
ÅÅ 
=
ÅÅ 
table
ÅÅ  %
.
ÅÅ% &
Column
ÅÅ& ,
<
ÅÅ, -
decimal
ÅÅ- 4
>
ÅÅ4 5
(
ÅÅ5 6
type
ÅÅ6 :
:
ÅÅ: ;
$str
ÅÅ< K
,
ÅÅK L
nullable
ÅÅM U
:
ÅÅU V
false
ÅÅW \
)
ÅÅ\ ]
,
ÅÅ] ^
PayrollDate
ÇÇ 
=
ÇÇ  !
table
ÇÇ" '
.
ÇÇ' (
Column
ÇÇ( .
<
ÇÇ. /
DateTime
ÇÇ/ 7
>
ÇÇ7 8
(
ÇÇ8 9
type
ÇÇ9 =
:
ÇÇ= >
$str
ÇÇ? J
,
ÇÇJ K
nullable
ÇÇL T
:
ÇÇT U
false
ÇÇV [
)
ÇÇ[ \
}
ÉÉ 
,
ÉÉ 
constraints
ÑÑ 
:
ÑÑ 
table
ÑÑ "
=>
ÑÑ# %
{
ÖÖ 
table
ÜÜ 
.
ÜÜ 

PrimaryKey
ÜÜ $
(
ÜÜ$ %
$str
ÜÜ% 1
,
ÜÜ1 2
x
ÜÜ3 4
=>
ÜÜ5 7
x
ÜÜ8 9
.
ÜÜ9 :
	PayrollId
ÜÜ: C
)
ÜÜC D
;
ÜÜD E
table
áá 
.
áá 

ForeignKey
áá $
(
áá$ %
name
àà 
:
àà 
$str
àà >
,
àà> ?
column
ââ 
:
ââ 
x
ââ  !
=>
ââ" $
x
ââ% &
.
ââ& '

EmployeeId
ââ' 1
,
ââ1 2
principalTable
ää &
:
ää& '
$str
ää( 2
,
ää2 3
principalColumn
ãã '
:
ãã' (
$str
ãã) 5
,
ãã5 6
onDelete
åå  
:
åå  !
ReferentialAction
åå" 3
.
åå3 4
Cascade
åå4 ;
)
åå; <
;
åå< =
}
çç 
)
çç 
;
çç 
migrationBuilder
èè 
.
èè 
CreateTable
èè (
(
èè( )
name
êê 
:
êê 
$str
êê %
,
êê% &
columns
ëë 
:
ëë 
table
ëë 
=>
ëë !
new
ëë" %
{
íí 
ConfigId
ìì 
=
ìì 
table
ìì $
.
ìì$ %
Column
ìì% +
<
ìì+ ,
int
ìì, /
>
ìì/ 0
(
ìì0 1
type
ìì1 5
:
ìì5 6
$str
ìì7 <
,
ìì< =
nullable
ìì> F
:
ììF G
false
ììH M
)
ììM N
.
îî 

Annotation
îî #
(
îî# $
$str
îî$ 8
,
îî8 9
$str
îî: @
)
îî@ A
,
îîA B

EmployeeId
ïï 
=
ïï  
table
ïï! &
.
ïï& '
Column
ïï' -
<
ïï- .
int
ïï. 1
>
ïï1 2
(
ïï2 3
type
ïï3 7
:
ïï7 8
$str
ïï9 >
,
ïï> ?
nullable
ïï@ H
:
ïïH I
false
ïïJ O
)
ïïO P
,
ïïP Q

Allowances
ññ 
=
ññ  
table
ññ! &
.
ññ& '
Column
ññ' -
<
ññ- .
decimal
ññ. 5
>
ññ5 6
(
ññ6 7
type
ññ7 ;
:
ññ; <
$str
ññ= L
,
ññL M
	precision
ññN W
:
ññW X
$num
ññY [
,
ññ[ \
scale
ññ] b
:
ññb c
$num
ññd e
,
ññe f
nullable
ññg o
:
ñño p
false
ññq v
)
ññv w
,
ññw x

Deductions
óó 
=
óó  
table
óó! &
.
óó& '
Column
óó' -
<
óó- .
decimal
óó. 5
>
óó5 6
(
óó6 7
type
óó7 ;
:
óó; <
$str
óó= L
,
óóL M
	precision
óóN W
:
óóW X
$num
óóY [
,
óó[ \
scale
óó] b
:
óób c
$num
óód e
,
óóe f
nullable
óóg o
:
óóo p
false
óóq v
)
óóv w
,
óów x
TaxRate
òò 
=
òò 
table
òò #
.
òò# $
Column
òò$ *
<
òò* +
decimal
òò+ 2
>
òò2 3
(
òò3 4
type
òò4 8
:
òò8 9
$str
òò: H
,
òòH I
	precision
òòJ S
:
òòS T
$num
òòU V
,
òòV W
scale
òòX ]
:
òò] ^
$num
òò_ `
,
òò` a
nullable
òòb j
:
òòj k
false
òòl q
)
òòq r
}
ôô 
,
ôô 
constraints
öö 
:
öö 
table
öö "
=>
öö# %
{
õõ 
table
úú 
.
úú 

PrimaryKey
úú $
(
úú$ %
$str
úú% 7
,
úú7 8
x
úú9 :
=>
úú; =
x
úú> ?
.
úú? @
ConfigId
úú@ H
)
úúH I
;
úúI J
table
ùù 
.
ùù 

ForeignKey
ùù $
(
ùù$ %
name
ûû 
:
ûû 
$str
ûû D
,
ûûD E
column
üü 
:
üü 
x
üü  !
=>
üü" $
x
üü% &
.
üü& '

EmployeeId
üü' 1
,
üü1 2
principalTable
†† &
:
††& '
$str
††( 2
,
††2 3
principalColumn
°° '
:
°°' (
$str
°°) 5
,
°°5 6
onDelete
¢¢  
:
¢¢  !
ReferentialAction
¢¢" 3
.
¢¢3 4
Cascade
¢¢4 ;
)
¢¢; <
;
¢¢< =
}
££ 
)
££ 
;
££ 
migrationBuilder
•• 
.
•• 
CreateTable
•• (
(
••( )
name
¶¶ 
:
¶¶ 
$str
¶¶ !
,
¶¶! "
columns
ßß 
:
ßß 
table
ßß 
=>
ßß !
new
ßß" %
{
®® 
TimesheetId
©© 
=
©©  !
table
©©" '
.
©©' (
Column
©©( .
<
©©. /
int
©©/ 2
>
©©2 3
(
©©3 4
type
©©4 8
:
©©8 9
$str
©©: ?
,
©©? @
nullable
©©A I
:
©©I J
false
©©K P
)
©©P Q
.
™™ 

Annotation
™™ #
(
™™# $
$str
™™$ 8
,
™™8 9
$str
™™: @
)
™™@ A
,
™™A B

EmployeeId
´´ 
=
´´  
table
´´! &
.
´´& '
Column
´´' -
<
´´- .
int
´´. 1
>
´´1 2
(
´´2 3
type
´´3 7
:
´´7 8
$str
´´9 >
,
´´> ?
nullable
´´@ H
:
´´H I
false
´´J O
)
´´O P
,
´´P Q
Date
¨¨ 
=
¨¨ 
table
¨¨  
.
¨¨  !
Column
¨¨! '
<
¨¨' (
DateTime
¨¨( 0
>
¨¨0 1
(
¨¨1 2
type
¨¨2 6
:
¨¨6 7
$str
¨¨8 C
,
¨¨C D
nullable
¨¨E M
:
¨¨M N
false
¨¨O T
)
¨¨T U
,
¨¨U V
HoursWorked
≠≠ 
=
≠≠  !
table
≠≠" '
.
≠≠' (
Column
≠≠( .
<
≠≠. /
double
≠≠/ 5
>
≠≠5 6
(
≠≠6 7
type
≠≠7 ;
:
≠≠; <
$str
≠≠= D
,
≠≠D E
nullable
≠≠F N
:
≠≠N O
false
≠≠P U
)
≠≠U V
}
ÆÆ 
,
ÆÆ 
constraints
ØØ 
:
ØØ 
table
ØØ "
=>
ØØ# %
{
∞∞ 
table
±± 
.
±± 

PrimaryKey
±± $
(
±±$ %
$str
±±% 3
,
±±3 4
x
±±5 6
=>
±±7 9
x
±±: ;
.
±±; <
TimesheetId
±±< G
)
±±G H
;
±±H I
table
≤≤ 
.
≤≤ 

ForeignKey
≤≤ $
(
≤≤$ %
name
≥≥ 
:
≥≥ 
$str
≥≥ @
,
≥≥@ A
column
¥¥ 
:
¥¥ 
x
¥¥  !
=>
¥¥" $
x
¥¥% &
.
¥¥& '

EmployeeId
¥¥' 1
,
¥¥1 2
principalTable
µµ &
:
µµ& '
$str
µµ( 2
,
µµ2 3
principalColumn
∂∂ '
:
∂∂' (
$str
∂∂) 5
,
∂∂5 6
onDelete
∑∑  
:
∑∑  !
ReferentialAction
∑∑" 3
.
∑∑3 4
Cascade
∑∑4 ;
)
∑∑; <
;
∑∑< =
}
∏∏ 
)
∏∏ 
;
∏∏ 
migrationBuilder
∫∫ 
.
∫∫ 
CreateIndex
∫∫ (
(
∫∫( )
name
ªª 
:
ªª 
$str
ªª )
,
ªª) *
table
ºº 
:
ºº 
$str
ºº !
,
ºº! "
column
ΩΩ 
:
ΩΩ 
$str
ΩΩ 
,
ΩΩ  
unique
ææ 
:
ææ 
true
ææ 
)
ææ 
;
ææ 
migrationBuilder
¿¿ 
.
¿¿ 
CreateIndex
¿¿ (
(
¿¿( )
name
¡¡ 
:
¡¡ 
$str
¡¡ 2
,
¡¡2 3
table
¬¬ 
:
¬¬ 
$str
¬¬ %
,
¬¬% &
column
√√ 
:
√√ 
$str
√√ $
)
√√$ %
;
√√% &
migrationBuilder
≈≈ 
.
≈≈ 
CreateIndex
≈≈ (
(
≈≈( )
name
∆∆ 
:
∆∆ 
$str
∆∆ 2
,
∆∆2 3
table
«« 
:
«« 
$str
«« %
,
««% &
column
»» 
:
»» 
$str
»» $
)
»»$ %
;
»»% &
migrationBuilder
   
.
   
CreateIndex
   (
(
  ( )
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ -
,
ÀÀ- .
table
ÃÃ 
:
ÃÃ 
$str
ÃÃ  
,
ÃÃ  !
column
ÕÕ 
:
ÕÕ 
$str
ÕÕ $
)
ÕÕ$ %
;
ÕÕ% &
migrationBuilder
œœ 
.
œœ 
CreateIndex
œœ (
(
œœ( )
name
–– 
:
–– 
$str
–– 3
,
––3 4
table
—— 
:
—— 
$str
—— &
,
——& '
column
““ 
:
““ 
$str
““ $
)
““$ %
;
““% &
migrationBuilder
‘‘ 
.
‘‘ 
CreateIndex
‘‘ (
(
‘‘( )
name
’’ 
:
’’ 
$str
’’ /
,
’’/ 0
table
÷÷ 
:
÷÷ 
$str
÷÷ "
,
÷÷" #
column
◊◊ 
:
◊◊ 
$str
◊◊ $
)
◊◊$ %
;
◊◊% &
}
ÿÿ 	
	protected
€€ 
override
€€ 
void
€€ 
Down
€€  $
(
€€$ %
MigrationBuilder
€€% 5
migrationBuilder
€€6 F
)
€€F G
{
‹‹ 	
migrationBuilder
›› 
.
›› 
	DropTable
›› &
(
››& '
name
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ  
)
ﬁﬁ  !
;
ﬁﬁ! "
migrationBuilder
‡‡ 
.
‡‡ 
	DropTable
‡‡ &
(
‡‡& '
name
·· 
:
·· 
$str
·· 
)
··  
;
··  !
migrationBuilder
„„ 
.
„„ 
	DropTable
„„ &
(
„„& '
name
‰‰ 
:
‰‰ 
$str
‰‰ $
)
‰‰$ %
;
‰‰% &
migrationBuilder
ÊÊ 
.
ÊÊ 
	DropTable
ÊÊ &
(
ÊÊ& '
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ $
)
ÁÁ$ %
;
ÁÁ% &
migrationBuilder
ÈÈ 
.
ÈÈ 
	DropTable
ÈÈ &
(
ÈÈ& '
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ 
)
ÍÍ  
;
ÍÍ  !
migrationBuilder
ÏÏ 
.
ÏÏ 
	DropTable
ÏÏ &
(
ÏÏ& '
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ %
)
ÌÌ% &
;
ÌÌ& '
migrationBuilder
ÔÔ 
.
ÔÔ 
	DropTable
ÔÔ &
(
ÔÔ& '
name
 
:
 
$str
 !
)
! "
;
" #
migrationBuilder
ÚÚ 
.
ÚÚ 
	DropTable
ÚÚ &
(
ÚÚ& '
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ 
)
ÛÛ 
;
ÛÛ 
migrationBuilder
ıı 
.
ıı 
	DropTable
ıı &
(
ıı& '
name
ˆˆ 
:
ˆˆ 
$str
ˆˆ  
)
ˆˆ  !
;
ˆˆ! "
}
˜˜ 	
}
¯¯ 
}˘˘ ˛
eE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\UserRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{		 
public

 

class

 
UserRepo

 
:

 
	IUserRepo

 %
<

% &
User

& *
>

* +
{ 
public 
User 
AddUser 
( 
User  
user! %
)% &
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
	dbContext 
. 
Users 
.  
Add  #
(# $
user$ (
)( )
;) *
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
user 
; 
} 
} 	
public 
User 
ValidateUser  
(  !
User! %
user& *
)* +
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
return 
	dbContext  
.  !
Users! &
.& '
FirstOrDefault' 5
(5 6
u6 7
=>8 :
u; <
.< =
Email= B
==C E
userF J
.J K
EmailK P
&&Q S
uT U
.U V
PasswordV ^
==_ a
userb f
.f g
Passwordg o
&&p r
us t
.t u
Roleu y
==z |
user	} Å
.
Å Ç
Role
Ç Ü
)
Ü á
;
á à
} 
} 	
public 
List 
< 
User 
> 
GetAllUsers %
(% &
)& '
{ 	
using   
(   
var   
	dbContext    
=  ! "
new  # &
EasypayContext  ' 5
(  5 6
)  6 7
)  7 8
{!! 
return"" 
	dbContext""  
.""  !
Users""! &
.""& '
ToList""' -
(""- .
)"". /
;""/ 0
}## 
}$$ 	
}%% 
}&& …
jE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\TimesheetRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{		 
public

 

class

 
TimesheetRepo

 
:

  
ITimesheetRepo

! /
<

/ 0
	Timesheet

0 9
>

9 :
{ 
public 
	Timesheet  
AddOrUpdateTimesheet -
(- .
	Timesheet. 7
	timesheet8 A
)A B
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
var 
existing 
= 
	dbContext (
.( )

Timesheets) 3
.3 4
FirstOrDefault4 B
(B C
tC D
=>E G
tH I
.I J

EmployeeIdJ T
==U W
	timesheetX a
.a b

EmployeeIdb l
&&m o
tp q
.q r
Dater v
==w y
	timesheet	z É
.
É Ñ
Date
Ñ à
)
à â
;
â ä
if 
( 
existing 
!= 
null  $
)$ %
{ 
existing 
. 
HoursWorked (
=) *
	timesheet+ 4
.4 5
HoursWorked5 @
;@ A
} 
else 
{ 
	dbContext 
. 

Timesheets (
.( )
Add) ,
(, -
	timesheet- 6
)6 7
;7 8
} 
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
	timesheet  
;  !
} 
} 	
public 
List 
< 
	Timesheet 
> %
GetTimesheetsByEmployeeId 8
(8 9
int9 <

employeeId= G
)G H
{ 	
using   
(   
var   
	dbContext    
=  ! "
new  # &
EasypayContext  ' 5
(  5 6
)  6 7
)  7 8
{!! 
return"" 
	dbContext""  
.""  !

Timesheets""! +
.""+ ,
Where"", 1
(""1 2
t""2 3
=>""4 6
t""7 8
.""8 9

EmployeeId""9 C
==""D F

employeeId""G Q
)""Q R
.""R S
ToList""S Y
(""Y Z
)""Z [
;""[ \
}## 
}$$ 	
}%% 
}&& ¥
gE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\ReportRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

class		 

ReportRepo		 
:		 
IReportRepo		 )
{

 
private 
readonly 
string 
_reportPath  +
=, -
Path. 2
.2 3
Combine3 :
(: ;
	Directory; D
.D E
GetCurrentDirectoryE X
(X Y
)Y Z
,Z [
$str\ e
,e f
$strg p
,p q
$strr ~
)~ 
;	 Ä
public 
List 
< 
string 
>  
GetComplianceReports 0
(0 1
)1 2
{ 	
if 
( 
! 
	Directory 
. 
Exists !
(! "
_reportPath" -
)- .
). /
return 
new 
List 
<  
string  &
>& '
(' (
)( )
;) *
return 
	Directory 
. 
GetFiles %
(% &
_reportPath& 1
)1 2
. 
Select #
(# $
Path$ (
.( )
GetFileName) 4
)4 5
. 
ToList #
(# $
)$ %
;% &
} 	
} 
} ¸7
hE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\PayrollRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{		 
public

 

class

 
PayrollRepo

 
:

 
IPayrollRepo

 +
<

+ ,
Payroll

, 3
>

3 4
{ 
public 
Payroll 
GeneratePayroll &
(& '
Payroll' .
payroll/ 6
)6 7
{ 	
payroll 
. 
PayrollDate 
=  !
DateTime" *
.* +
Now+ .
;. /
payroll 
. 
Salary 
= 
payroll $
.$ %
Salary% +
+, -
payroll. 5
.5 6
Bonus6 ;
-< =
payroll> E
.E F

DeductionsF P
;P Q
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
	dbContext 
. 
Payrolls "
." #
Add# &
(& '
payroll' .
). /
;/ 0
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
payroll 
; 
} 
} 	
public 
Payroll 

AddPayroll !
(! "
Payroll" )
payroll* 1
)1 2
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
	dbContext 
. 
Payrolls "
." #
Add# &
(& '
payroll' .
). /
;/ 0
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
payroll 
; 
}   
}!! 	
public## 
Payroll## 
UpdatePayroll## $
(##$ %
Payroll##% ,
payroll##- 4
)##4 5
{$$ 	
using%% 
(%% 
var%% 
	dbContext%%  
=%%! "
new%%# &
EasypayContext%%' 5
(%%5 6
)%%6 7
)%%7 8
{&& 
var'' 
existing'' 
='' 
	dbContext'' (
.''( )
Payrolls'') 1
.''1 2
FirstOrDefault''2 @
(''@ A
p''A B
=>''C E
p''F G
.''G H
	PayrollId''H Q
==''R T
payroll''U \
.''\ ]
	PayrollId''] f
)''f g
;''g h
if(( 
((( 
existing(( 
!=(( 
null((  $
)(($ %
{)) 
existing** 
.** 
Salary** #
=**$ %
payroll**& -
.**- .
Salary**. 4
;**4 5
existing++ 
.++ 
PayrollDate++ (
=++) *
payroll+++ 2
.++2 3
PayrollDate++3 >
;++> ?
	dbContext,, 
.,, 
SaveChanges,, )
(,,) *
),,* +
;,,+ ,
}-- 
return.. 
existing.. 
;..  
}// 
}00 	
public22 
Payroll22 
DeletePayroll22 $
(22$ %
Payroll22% ,
payroll22- 4
)224 5
{33 	
using44 
(44 
var44 
	dbContext44  
=44! "
new44# &
EasypayContext44' 5
(445 6
)446 7
)447 8
{55 
var66 
existing66 
=66 
	dbContext66 (
.66( )
Payrolls66) 1
.661 2
FirstOrDefault662 @
(66@ A
p66A B
=>66C E
p66F G
.66G H
	PayrollId66H Q
==66R T
payroll66U \
.66\ ]
	PayrollId66] f
)66f g
;66g h
if77 
(77 
existing77 
!=77 
null77  $
)77$ %
{88 
	dbContext99 
.99 
Payrolls99 &
.99& '
Remove99' -
(99- .
existing99. 6
)996 7
;997 8
	dbContext:: 
.:: 
SaveChanges:: )
(::) *
)::* +
;::+ ,
};; 
return<< 
existing<< 
;<<  
}== 
}>> 	
public@@ 
List@@ 
<@@ 
Payroll@@ 
>@@ #
GetPayrollsByEmployeeId@@ 4
(@@4 5
int@@5 8

employeeId@@9 C
)@@C D
{AA 	
usingBB 
(BB 
varBB 
	dbContextBB  
=BB! "
newBB# &
EasypayContextBB' 5
(BB5 6
)BB6 7
)BB7 8
{CC 
returnDD 
	dbContextDD  
.DD  !
PayrollsDD! )
.DD) *
WhereDD* /
(DD/ 0
pDD0 1
=>DD2 4
pDD5 6
.DD6 7

EmployeeIdDD7 A
==DDB D

employeeIdDDE O
)DDO P
.DDP Q
ToListDDQ W
(DDW X
)DDX Y
;DDY Z
}EE 
}FF 	
publicHH 
ListHH 
<HH 
PayrollHH 
>HH 
GetAllPayrollsHH +
(HH+ ,
)HH, -
{II 	
usingJJ 
(JJ 
varJJ 
	dbContextJJ  
=JJ! "
newJJ# &
EasypayContextJJ' 5
(JJ5 6
)JJ6 7
)JJ7 8
{KK 
returnLL 
	dbContextLL  
.LL  !
PayrollsLL! )
.LL) *
ToListLL* 0
(LL0 1
)LL1 2
;LL2 3
}MM 
}NN 	
publicPP 
PayrollPP 
VerifyPayrollPP $
(PP$ %
intPP% (
	payrollIdPP) 2
)PP2 3
{QQ 	
usingRR 
(RR 
varRR 
	dbContextRR  
=RR! "
newRR# &
EasypayContextRR' 5
(RR5 6
)RR6 7
)RR7 8
{SS 
varTT 
existingPayrollTT #
=TT$ %
	dbContextTT& /
.TT/ 0
PayrollsTT0 8
.TT8 9
FirstOrDefaultTT9 G
(TTG H
pTTH I
=>TTJ L
pTTM N
.TTN O
	PayrollIdTTO X
==TTY [
	payrollIdTT\ e
)TTe f
;TTf g
ifUU 
(UU 
existingPayrollUU #
==UU$ &
nullUU' +
)UU+ ,
{VV 
returnWW 
nullWW 
;WW  
}XX 
	dbContextYY 
.YY 
SaveChangesYY %
(YY% &
)YY& '
;YY' (
returnZZ 
existingPayrollZZ &
;ZZ& '
}[[ 
}\\ 	
}^^ 
}__ ¨
nE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\PayrollConfigRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{		 
public

 

class

 
PayrollConfigRepo

 "
:

# $
IPayrollConfigRepo

% 7
<

7 8
PayrollConfig

8 E
>

E F
{ 
public 
PayrollConfig 
AddOrUpdateConfig .
(. /
PayrollConfig/ <
config= C
)C D
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
var 
existing 
= 
	dbContext (
.( )
PayrollConfigs) 7
.7 8
FirstOrDefault8 F
(F G
pG H
=>I K
pL M
.M N

EmployeeIdN X
==Y [
config\ b
.b c

EmployeeIdc m
)m n
;n o
if 
( 
existing 
!= 
null  $
)$ %
{ 
existing 
. 

Allowances '
=( )
config* 0
.0 1

Allowances1 ;
;; <
existing 
. 

Deductions '
=( )
config* 0
.0 1

Deductions1 ;
;; <
existing 
. 
TaxRate $
=% &
config' -
.- .
TaxRate. 5
;5 6
} 
else 
{ 
	dbContext 
. 
PayrollConfigs ,
., -
Add- 0
(0 1
config1 7
)7 8
;8 9
} 
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
config 
; 
} 
} 	
public   
PayrollConfig   !
GetConfigByEmployeeId   2
(  2 3
int  3 6

employeeId  7 A
)  A B
{!! 	
using"" 
("" 
var"" 
	dbContext""  
=""! "
new""# &
EasypayContext""' 5
(""5 6
)""6 7
)""7 8
{## 
return$$ 
	dbContext$$  
.$$  !
PayrollConfigs$$! /
.$$/ 0
FirstOrDefault$$0 >
($$> ?
p$$? @
=>$$A C
p$$D E
.$$E F

EmployeeId$$F P
==$$Q S

employeeId$$T ^
)$$^ _
;$$_ `
}%% 
}&& 	
public(( 
List(( 
<(( 
PayrollConfig(( !
>((! "
GetAll((# )
((() *
)((* +
{)) 	
using** 
(** 
var** 
	dbContext**  
=**! "
new**# &
EasypayContext**' 5
(**5 6
)**6 7
)**7 8
{++ 
return,, 
	dbContext,,  
.,,  !
PayrollConfigs,,! /
.,,/ 0
ToList,,0 6
(,,6 7
),,7 8
;,,8 9
}-- 
}.. 	
}// 
}00 ¿
mE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\NotificationRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{		 
public

 

class

 
NotificationRepo

 !
:

" #
INotificationRepo

$ 5
<

5 6
Notification

6 B
>

B C
{ 
public 
Notification 
AddNotification +
(+ ,
Notification, 8
notification9 E
)E F
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
	dbContext 
. 
Notifications '
.' (
Add( +
(+ ,
notification, 8
)8 9
;9 :
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
notification #
;# $
} 
} 	
public 
List 
< 
Notification  
>  !(
GetNotificationsByEmployeeId" >
(> ?
int? B

employeeIdC M
)M N
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
return 
	dbContext  
.  !
Notifications! .
.. /
Where/ 4
(4 5
n5 6
=>7 9
n: ;
.; <

EmployeeId< F
==G I

employeeIdJ T
)T U
.U V
ToListV \
(\ ]
)] ^
;^ _
} 
} 	
public 
List 
< 
Notification  
>  !
GetAll" (
(( )
)) *
{ 	
using   
(   
var   
	dbContext    
=  ! "
new  # &
EasypayContext  ' 5
(  5 6
)  6 7
)  7 8
{!! 
return"" 
	dbContext""  
.""  !
Notifications""! .
."". /
ToList""/ 5
(""5 6
)""6 7
;""7 8
}## 
}$$ 	
}%% 
}&& Ñ
mE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\LeaveRequestRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{		 
public

 

class

 
LeaveRequestRepo

 !
:

" #
ILeaveRequestRepo

$ 5
<

5 6
LeaveRequest

6 B
>

B C
{ 
public 
LeaveRequest 
SubmitLeaveRequest .
(. /
LeaveRequest/ ;
request< C
)C D
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
	dbContext 
. 
LeaveRequests '
.' (
Add( +
(+ ,
request, 3
)3 4
;4 5
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
request 
; 
} 
} 	
public 
LeaveRequest '
ApproveOrRejectLeaveRequest 7
(7 8
LeaveRequest8 D
requestE L
)L M
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
var 
existing 
= 
	dbContext (
.( )
LeaveRequests) 6
.6 7
FirstOrDefault7 E
(E F
rF G
=>H J
rK L
.L M
LeaveRequestIdM [
==\ ^
request_ f
.f g
LeaveRequestIdg u
)u v
;v w
if 
( 
existing 
!= 
null  $
)$ %
{ 
existing 
. 
Status #
=$ %
request& -
.- .
Status. 4
;4 5
	dbContext 
. 
SaveChanges )
() *
)* +
;+ ,
} 
return   
existing   
;    
}!! 
}"" 	
public$$ 
List$$ 
<$$ 
LeaveRequest$$  
>$$  !(
GetLeaveRequestsByEmployeeId$$" >
($$> ?
int$$? B

employeeId$$C M
)$$M N
{%% 	
using&& 
(&& 
var&& 
	dbContext&&  
=&&! "
new&&# &
EasypayContext&&' 5
(&&5 6
)&&6 7
)&&7 8
{'' 
return(( 
	dbContext((  
.((  !
LeaveRequests((! .
.((. /
Where((/ 4
(((4 5
r((5 6
=>((7 9
r((: ;
.((; <

EmployeeId((< F
==((G I

employeeId((J T
)((T U
.((U V
ToList((V \
(((\ ]
)((] ^
;((^ _
})) 
}** 	
public,, 
List,, 
<,, 
LeaveRequest,,  
>,,  !
GetAllLeaveRequests,," 5
(,,5 6
),,6 7
{-- 	
using.. 
(.. 
var.. 
	dbContext..  
=..! "
new..# &
EasypayContext..' 5
(..5 6
)..6 7
)..7 8
{// 
return00 
	dbContext00  
.00  !
LeaveRequests00! .
.00. /
ToList00/ 5
(005 6
)006 7
;007 8
}11 
}22 	
}33 
}44  
fE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\IUserRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
	IUserRepo		 
<		 
T		  
>		  !
{

 
T 	
AddUser
 
( 
T 
user 
) 
; 
T 	
ValidateUser
 
( 
T 
user 
) 
; 
List 
< 
T 
> 
GetAllUsers 
( 
) 
; 
} 
} ¶
kE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\ITimesheetRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
ITimesheetRepo		 #
<		# $
T		$ %
>		% &
{

 
T 	 
AddOrUpdateTimesheet
 
( 
T  
	timesheet! *
)* +
;+ ,
List 
< 
T 
> %
GetTimesheetsByEmployeeId )
() *
int* -

employeeId. 8
)8 9
;9 :
} 
} ∆
hE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\IReportRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
IReportRepo		  
{

 
List 
< 
string 
>  
GetComplianceReports )
() *
)* +
;+ ,
} 
} é

iE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\IPayrollRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
IPayrollRepo		 !
<		! "
T		" #
>		# $
{

 
T 	
GeneratePayroll
 
( 
T 
payroll #
)# $
;$ %
T 	

AddPayroll
 
( 
T 
payroll 
) 
;  
T 	
UpdatePayroll
 
( 
T 
payroll !
)! "
;" #
T 	
DeletePayroll
 
( 
T 
payroll !
)! "
;" #
List 
< 
T 
> #
GetPayrollsByEmployeeId '
(' (
int( +

employeeId, 6
)6 7
;7 8
List 
< 
T 
> 
GetAllPayrolls 
( 
)  
;  !
T 	
VerifyPayroll
 
( 
int 
	payrollId %
)% &
;& '
} 
} Ù
oE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\IPayrollConfigRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
IPayrollConfigRepo		 '
<		' (
T		( )
>		) *
{

 
T 	
AddOrUpdateConfig
 
( 
T 
config $
)$ %
;% &
T 	!
GetConfigByEmployeeId
 
(  
int  #

employeeId$ .
). /
;/ 0
List 
< 
T 
> 
GetAll 
( 
) 
; 
} 
} ≠
nE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\INotificationRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
INotificationRepo		 &
<		& '
T		' (
>		( )
{

 
T 	
AddNotification
 
( 
T 
notification (
)( )
;) *
List 
< 
T 
> (
GetNotificationsByEmployeeId ,
(, -
int- 0

employeeId1 ;
); <
;< =
List 
< 
T 
> 
GetAll 
( 
) 
; 
} 
} ¡
nE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\ILeaveRequestRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
ILeaveRequestRepo		 &
<		& '
T		' (
>		( )
{

 
T 	
SubmitLeaveRequest
 
( 
T 
request &
)& '
;' (
T 	'
ApproveOrRejectLeaveRequest
 %
(% &
T& '
request( /
)/ 0
;0 1
List 
< 
T 
> (
GetLeaveRequestsByEmployeeId ,
(, -
int- 0

employeeId1 ;
); <
;< =
List 
< 
T 
> 
GetAllLeaveRequests #
(# $
)$ %
;% &
} 
} €
jE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\IEmployeeRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
IEmployeeRepo		 "
<		" #
T		# $
>		$ %
{

 
T 	
AddEmployee
 
( 
T 
employee  
)  !
;! "
T 	
UpdateEmployee
 
( 
T 
employee #
)# $
;$ %
T 	
DeleteEmployee
 
( 
T 
employee #
)# $
;$ %
T 	
GetEmployeeById
 
( 
int 
id  
)  !
;! "
List 
< 
T 
> 
GetAllEmployees 
(  
)  !
;! "
} 
} ÿ
iE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\IBenefitRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
public		 

	interface		 
IBenefitRepo		 !
<		! "
T		" #
>		# $
{

 
T 	

AddBenefit
 
( 
T 
benefit 
) 
;  
T 	
UpdateBenefit
 
( 
T 
benefit !
)! "
;" #
T 	
DeleteBenefit
 
( 
T 
benefit !
)! "
;" #
List 
< 
T 
> 
GetAllBenefits 
( 
)  
;  !
} 
} ≈
jE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\IAuditLogRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{ 
	namespace		 
DAL		 
.		 

DataAccess		 
{

 
public 
	interface 
IAuditLogRepo &
<& '
T' (
>( )
{ 	
T 
AddLog 
( 
T 
log 
) 
; 
List 
< 
T 
> 

GetAllLogs 
( 
)  
;  !
} 	
} 
} ≠-
iE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\EmployeeRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{		 
public

 

class

 
EmployeeRepo

 
:

 
IEmployeeRepo

  -
<

- .
Employee

. 6
>

6 7
{ 
public 
Employee 
AddEmployee #
(# $
Employee$ ,
employee- 5
)5 6
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
	dbContext 
. 
	Employees #
.# $
Add$ '
(' (
employee( 0
)0 1
;1 2
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
employee 
;  
} 
} 	
public 
Employee 
UpdateEmployee &
(& '
Employee' /
employee0 8
)8 9
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
var 
existing 
= 
	dbContext (
.( )
	Employees) 2
.2 3
FirstOrDefault3 A
(A B
eB C
=>D F
eG H
.H I

EmployeeIdI S
==T V
employeeW _
._ `

EmployeeId` j
)j k
;k l
if 
( 
existing 
!= 
null  $
)$ %
{ 
existing 
. 
Name !
=" #
employee$ ,
., -
Name- 1
;1 2
existing 
. 
Email "
=# $
employee% -
.- .
Email. 3
;3 4
existing 
. 

Department '
=( )
employee* 2
.2 3

Department3 =
;= >
existing   
.   
Role   !
=  " #
employee  $ ,
.  , -
Role  - 1
;  1 2
	dbContext!! 
.!! 
SaveChanges!! )
(!!) *
)!!* +
;!!+ ,
}"" 
return## 
existing## 
;##  
}$$ 
}%% 	
public'' 
Employee'' 
DeleteEmployee'' &
(''& '
Employee''' /
employee''0 8
)''8 9
{(( 	
using)) 
()) 
var)) 
	dbContext))  
=))! "
new))# &
EasypayContext))' 5
())5 6
)))6 7
)))7 8
{** 
var++ 
existing++ 
=++ 
	dbContext++ (
.++( )
	Employees++) 2
.++2 3
FirstOrDefault++3 A
(++A B
e++B C
=>++D F
e++G H
.++H I

EmployeeId++I S
==++T V
employee++W _
.++_ `

EmployeeId++` j
)++j k
;++k l
if,, 
(,, 
existing,, 
!=,, 
null,,  $
),,$ %
{-- 
	dbContext.. 
... 
	Employees.. '
...' (
Remove..( .
(... /
existing../ 7
)..7 8
;..8 9
	dbContext// 
.// 
SaveChanges// )
(//) *
)//* +
;//+ ,
}00 
return11 
existing11 
;11  
}22 
}33 	
public55 
Employee55 
GetEmployeeById55 '
(55' (
int55( +
id55, .
)55. /
{66 	
using77 
(77 
var77 
	dbContext77  
=77! "
new77# &
EasypayContext77' 5
(775 6
)776 7
)777 8
{88 
return99 
	dbContext99  
.99  !
	Employees99! *
.99* +
FirstOrDefault99+ 9
(999 :
e99: ;
=>99< >
e99? @
.99@ A

EmployeeId99A K
==99L N
id99O Q
)99Q R
;99R S
}:: 
};; 	
public== 
Employee== 
GetEmployeeByEmail== *
(==* +
string==+ 1
email==2 7
)==7 8
{>> 	
using?? 
(?? 
var?? 
	dbContext??  
=??! "
new??# &
EasypayContext??' 5
(??5 6
)??6 7
)??7 8
{@@ 
returnAA 
	dbContextAA  
.AA  !
	EmployeesAA! *
.AA* +
FirstOrDefaultAA+ 9
(AA9 :
eAA: ;
=>AA< >
eAA? @
.AA@ A
EmailAAA F
==AAG I
emailAAJ O
)AAO P
;AAP Q
}BB 
}CC 	
publicEE 
ListEE 
<EE 
EmployeeEE 
>EE 
GetAllEmployeesEE -
(EE- .
)EE. /
{FF 	
usingGG 
(GG 
varGG 
	dbContextGG  
=GG! "
newGG# &
EasypayContextGG' 5
(GG5 6
)GG6 7
)GG7 8
{HH 
returnII 
	dbContextII  
.II  !
	EmployeesII! *
.II* +
ToListII+ 1
(II1 2
)II2 3
;II3 4
}JJ 
}KK 	
}LL 
}MM Æ
hE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\BenefitRepo.cs
	namespace 	
DAL
 
. 

DataAccess 
{		 
public

 

class

 
BenefitRepo

 
:

 
IBenefitRepo

 +
<

+ ,
Benefit

, 3
>

3 4
{ 
public 
Benefit 

AddBenefit %
(% &
Benefit& -
benefit. 5
)5 6
{ 
using 
( 
var 
	dbContext $
=% &
new' *
EasypayContext+ 9
(9 :
): ;
); <
{ 
	dbContext 
. 
Benefits &
.& '
Add' *
(* +
benefit+ 2
)2 3
;3 4
	dbContext 
. 
SaveChanges )
() *
)* +
;+ ,
return 
benefit "
;" #
} 
} 
public 
Benefit 
UpdateBenefit (
(( )
Benefit) 0
benefit1 8
)8 9
{ 
using 
( 
var 
	dbContext $
=% &
new' *
EasypayContext+ 9
(9 :
): ;
); <
{ 
var 
existing  
=! "
	dbContext# ,
., -
Benefits- 5
.5 6
FirstOrDefault6 D
(D E
bE F
=>G I
bJ K
.K L
	BenefitIdL U
==V X
benefitY `
.` a
	BenefitIda j
)j k
;k l
if 
( 
existing  
!=! #
null$ (
)( )
{ 
existing  
.  !
Type! %
=& '
benefit( /
./ 0
Type0 4
;4 5
	dbContext !
.! "
SaveChanges" -
(- .
). /
;/ 0
} 
return   
existing   #
;  # $
}!! 
}"" 
public$$ 
Benefit$$ 
DeleteBenefit$$ (
($$( )
Benefit$$) 0
benefit$$1 8
)$$8 9
{%% 
using&& 
(&& 
var&& 
	dbContext&& $
=&&% &
new&&' *
EasypayContext&&+ 9
(&&9 :
)&&: ;
)&&; <
{'' 
var(( 
existing((  
=((! "
	dbContext((# ,
.((, -
Benefits((- 5
.((5 6
FirstOrDefault((6 D
(((D E
b((E F
=>((G I
b((J K
.((K L
	BenefitId((L U
==((V X
benefit((Y `
.((` a
	BenefitId((a j
)((j k
;((k l
if)) 
()) 
existing))  
!=))! #
null))$ (
)))( )
{** 
	dbContext++ !
.++! "
Benefits++" *
.++* +
Remove+++ 1
(++1 2
existing++2 :
)++: ;
;++; <
	dbContext,, !
.,,! "
SaveChanges,," -
(,,- .
),,. /
;,,/ 0
}-- 
return.. 
existing.. #
;..# $
}// 
}00 
public22 
List22 
<22 
Benefit22 
>22  
GetAllBenefits22! /
(22/ 0
)220 1
{33 
using44 
(44 
var44 
	dbContext44 $
=44% &
new44' *
EasypayContext44+ 9
(449 :
)44: ;
)44; <
{55 
return66 
	dbContext66 $
.66$ %
Benefits66% -
.66- .
ToList66. 4
(664 5
)665 6
;666 7
}77 
}88 
}99 
}:: ‹
iE:\Hexaware\.NET_ANGULAR FSD\Saravanapriya_Hexa_FSD-FinalCaseStudy\Easypay\DAL\DataAccess\AuditLogRepo.cs
	namespace		 	
DAL		
 
.		 

DataAccess		 
{

 
public 

class 
AuditLogRepo 
: 
IAuditLogRepo  -
<- .
AuditLog. 6
>6 7
{ 
public 
AuditLog 
AddLog 
( 
AuditLog '
log( +
)+ ,
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
	dbContext 
. 
	AuditLogs #
.# $
Add$ '
(' (
log( +
)+ ,
;, -
	dbContext 
. 
SaveChanges %
(% &
)& '
;' (
return 
log 
; 
} 
} 	
public 
List 
< 
AuditLog 
> 

GetAllLogs (
(( )
)) *
{ 	
using 
( 
var 
	dbContext  
=! "
new# &
EasypayContext' 5
(5 6
)6 7
)7 8
{ 
return 
	dbContext  
.  !
	AuditLogs! *
.* +
ToList+ 1
(1 2
)2 3
;3 4
} 
} 	
} 
} 